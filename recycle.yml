<%
  old_pools = %w(vsphere-lb vsphere-proxy)
  pools = %w(gcp azure aws vsphere vsphere-proxy)
%>

resource_types:
- name: pool-trigger
  type: docker-image
  source:
    repository: cfmobile/pool-trigger

resources:
- name: git-kubo-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/kubo-ci
    branch: master

<% pools.each do |pool| %>
- name: <%= pool %>-lifecycle-trigger
  type: pool-trigger
  source:
    uri: git@github.com:pivotal-cf-experimental/kubo-locks.git
    branch: master
    pool: <%= pool %>-lifecycle
    private_key: ((git-ssh-key.private_key))

- name: <%= pool %>-lifecycle
  type: pool
  source:
    uri: git@github.com:pivotal-cf-experimental/kubo-locks.git
    branch: master
    private_key: ((git-ssh-key.private_key))
    pool: <%= pool %>-lifecycle

- name: <%= pool %>-pool
  type: pool
  source:
    uri: git@github.com:pivotal-cf-experimental/kubo-locks.git
    branch: master
    private_key: ((git-ssh-key.private_key))
    pool: <%= pool %>
<% end %>

<% old_pools.each do |pool| %>
- name: kubo-lock-<%= pool %>-lifecycle-trigger
  type: pool-trigger
  source:
    uri: git@github.com:pivotal-cf-experimental/kubo-locks.git
    branch: master
    pool: kubo-<%= pool %>-lifecycle
    private_key: ((git-ssh-key.private_key))

- name: kubo-lock-<%= pool %>-lifecycle
  type: pool
  source:
    uri: git@github.com:pivotal-cf-experimental/kubo-locks.git
    branch: master
    private_key: ((git-ssh-key.private_key))
    pool: kubo-<%= pool %>-lifecycle

- name: kubo-lock-<%= pool %>
  type: pool
  source:
    uri: git@github.com:pivotal-cf-experimental/kubo-locks.git
    branch: master
    private_key: ((git-ssh-key.private_key))
    pool: kubo-<%= pool %>
<% end %>

jobs:
<% old_pools.each do |pool| %>
<% env = pool.gsub(/-.*/, '') %>
- name: claim-lock-<%= pool %>
  plan:
  - get: kubo-lock-<%= pool %>-lifecycle-trigger
    trigger: true
    version: every
  - put: kubo-lock-<%= pool %>-lifecycle
    params: { acquire: true }
- name: cleanup-<%= pool %>
  plan:
  - in_parallel:
    - get: kubo-lock-<%= pool %>-lifecycle
      version: every
      trigger: true
      passed: [ 'claim-lock-<%= pool %>' ]
    - get: git-kubo-ci
  - task: cleanup-<%= pool %>
    file: git-kubo-ci/tasks/cleanup-<%= env %>-environment.yml
    params: { ENV_FILE: 'kubo-lock/metadata' }
    tags:
    - <%= pool %>
    input_mapping:
      kubo-lock: kubo-lock-<%= pool %>-lifecycle
  - put: kubo-lock-<%= pool %>
    params: { add: kubo-lock-<%= pool %>-lifecycle }
  - put: kubo-lock-<%= pool %>-lifecycle
    params: { remove: kubo-lock-<%= pool %>-lifecycle }
<% end %>

<% pools.each do |pool| %>
- name: claim-lock-<%= pool %>
  plan:
  - get: <%= pool %>-lifecycle-trigger
    trigger: true
    version: every
  - put: <%= pool %>-lifecycle
    params: { acquire: true }

- name: cleanup-<%= pool %>
  plan:
  - in_parallel:
    - get: <%= pool %>-lifecycle
      passed: [ claim-lock-<%= pool %> ]
      version: every
      trigger: true
    - get: git-kubo-ci
  - task: destroy-k8s
    file: git-kubo-ci/tasks/destroy-k8s-instance-long-lived-director.yml
    input_mapping:
      kubo-lock: <%= pool %>-lifecycle
    <% if pool == 'vsphere' %>
    tags: [ 'vsphere-lb' ]
    <% end %>
    <% if pool == 'vsphere-proxy' %>
    tags: [ 'vsphere-proxy' ]
    <% end %>
  - put: <%= pool %>-pool
    params: { add: <%= pool %>-lifecycle }
  - put: <%= pool %>-lifecycle
    params: { remove: <%= pool %>-lifecycle }
<% end %>
